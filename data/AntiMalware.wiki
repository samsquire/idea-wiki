++ Anti Malware

AM is SecuritySoftware that removes [Malware]. AM has a NativeImplementation.

Malware is highly prevalent in conventional systems and will eventually become present in TheSystem. As a precaution:
    * SystemsBridging means TheSystem can at least scan conventional systems for malware due to an ArchitecturalAwareness and possibly even remove them
    * OrganizeFromTheBeginning means that advanced SecuritySoftware to detect and treat malware will be ImplementTheUnimplemented from the start.

++Architecture
Malware treatment is broken down into different [Components] for MaximumModularity.
    * malware strategies
    * detection strategies
    * removal methods
    * repair:
    How to invoke repairs.
    * preventation:
    What settings thwart before it can begin.

AM [Applications] have the following [Components]:
    * Resident
    * On-demand
    * Heuristics
    * Quarantine

These components should be SelectableImplementations so that [Users] can compete on. ProductSystem ensures they are fairly compared.

Malware's uniqueness means that multiple detection, removal and prevention strategies are required. TheSystem uses [Standardization] for routines for [Reusability]. These are used in different combinations.

IndepthData regarding [Malware] is stored in [Encyclopedia]s in the [SecurityEncyclopedia]s and the [MalwareEncyclopedia].

RiskTracking relies on the MalwareEncyclopedia to calculate malware risk.
    * Compare port usage to [Firewall] rules to see if they would be prevented access
    * See if defence mechanisms, targets are present on TheSystem
    * Determine if subsceptible to vulnerabilities

 - webpages describing viruses should be simple XML with XLST decoration, so they can be reused elsewhere



scan notifications:
 - unattended, wait till scan is completely finished before notifying
 - pause and notify
 - notify and continue scanning
 
applications are functions that are used by other applications, they shouldn't close straight after execution

++Scanning

Malware scanning is brute force and two strategies of this include include:
    * A: check if items on computer match database
    * B: go through database looking for particular malware
It is likely TheSystem will intelligently decide which is more efficient.
    * Large databases use A
    * Small computer A
    * Small Database B
    * Large Computer B

Intelligence is required to make time till detection short.
    * recently accessed areas
    * most common malware strategies and locations

Conventional malware can easily reappear and this is why regression testing is necessary to ensure the problem is solved. This improves future scanning and adds intelligence.

Scanning should never be a PredecidedConfiguration or ExclusiveConfiguration, this means the following are possible:
    * scan for a particular malware, right click scan
    * scan for top 10 malwares of the month/year for each type: bot, trojan, virus
    * scan for a particular malware type

only do brute force scan if explicitly requested


i wanna be able to write scanning routines that use my own efficient strategies
 - simple component usage, PACKER( filename )
 - the ACTUAL routine that checks for virus is completely separate

detection and cleaning facilities separately programmed

scan order orders of most common, for month, year etc for efficiency
 - for most exploitable applications 
 - port scan 

file skimming: 
 - scan only the most common infection areas, use existing database to decide where to scan, don't scan too deep initially

Heuristic protection is the detection of malware without signatures.
    * Signature based protection is traditionally regarded as ineffective. This is because the signatures are not powerful. All malware has a consistent mode and method of attack and this has a signature. Preferably, detection should be entirely signature based since every base is covered permanently.



++Implementation

The AM NativeImplementation:
    * DistributedDataNetwork for [Update] ContentDistribution
    * CommunityNetwork for detection and review

Binary downloads will always have the current version. Conventional security applications offer outdated versions, forcing updates after installation. This is uselesss for target machines without internet connection. The binary should be the application and a simple archive for current definitions. This is so that recompilation isn't necessary.
 - binary downloads should always have most current version, what i aim to install the application on a different machine without internet?


++Interfaces


++Scanning
The DefenceArchitecture's SystemIntegration is used to subtly indicate security procedures.

[Files] under [Scanning] can be indicated with crosshairs and its progress represented by a phsical indicator along the icon or via progress bar. Security applications would be permitted to place their logo on the crosshairs. [Users] have UserPower modify how crosshairs appear. [Applications] are likely to install their own eyecandy. file:///C|/Documents%20and%20Settings/Improfane/My%20Documents/Pictures/Ideas/subtle_scan.PNG
This is a RealRepresentation because the progress bar can signify moving through the icon like a real scanner.

     Emails could be scanned on the row with a animated indicator or when opened?

If using the scanning [Portalling], [Users] can see details of the currently ongoing scanning. From this interface:
    * Display infected files as they are in TheSystem, through the SystemViewer, as they are in the folder they are detected in.
    * Remove/Disinfect detected items
    * View documentation for detected content, there should be enough details to keep soemeone interested in continued reading.


((
get back to, adobe asks me to update, i press no...where do i go to get it back?
theme MUSIC per application, doesn't play if music is currently playing...shouldn't be able to easily to disable simply because if speakers are on and not in use, you're wasting power
pass component type and component config --- interface panels, for start menu

NoVisiblePhysicalEndpoints
))

++Results

suspicious file scanner
 - file names like svchost and commonly infected .dll files
 - take md5 samples of a large portion of users

malware searching:
 - perhaps show a search of all variants first

[Users] can identify malware through TheSystem itself, such as the SystemViewer or the MainMenu. This information can also be CollaborativeData so that other users may learn about what is regarded as malicious or unwanted.

regression testing of malware


- click suspected spyware on list (aka, unidentified software)
- use skynet data anyway, no matter how little it is
- when something is blocked, TheSystem can present reason for blocks

* diagnosis, like a doctor etc

* anti virus interface
 * encyclopedic indepth entry regarding the virus, ability to use the data for manual scan
 * file names, random filename algorithm etc
 * automatic scans are simply stored instructions